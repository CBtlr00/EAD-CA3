@page "/"
@using CA3API.Movies
@inject IMoviesService MoviesService

<PageTitle>Movie API Blazor</PageTitle>
<body>
        <!-- search container -->
        <div class="input-group m-5 align-content-center">
            <input type="search" class="form-control rounded" placeholder="Search by Name" aria-label="Search" aria-describedby="search-addon" @bind-value="@searchTerm"/>
            <button type="button" class="btn btn-outline-primary" @onclick="@updateSearchTerm">Search Movie</button>
        </div>
        <!-- end of search container -->
        <div class="align-content-center">
            @if (Genres == null)
            {
                <div class="align-content-center">
                    <p class="m-5">No Genres Available...</p>
                </div>
            } else
            {
            <select @onchange="setGenre">
                @foreach (var genre in Genres)
                {
                    <option value=@genre.ID>@genre.Name</option>
                }
            </select>
            }
        <button @onclick="getFiltered" class="btn btn-light">Filter</button>
        </div>

        <!-- result container -->
        <div class = "container">
            <div class = "result-container">
                <div class = "result-grid" id = "result-grid">
                    <div>
                        @if (Movies == null)
                        {
                            <div class="align-content-center">
                                <p class="m-5">Please Search to load movies...</p>
                            </div>
                        }
                        else
                        {
                            <div class="row mb-3">
                                @foreach (var item in Movies)
                                {
                                    <div class="card m-2 " style="width:18rem;">
                                      <img class="card-img-top" src="@item.ImageUrl">
                                      <div class="card-body">
                                            <h5 class="card-title">@item.Headline (@item.Year)</h5>
                                            <h6 class="card-subtitle mb-2 text-muted">Rating: @item.Rating</h6>
                                            <h6 class="card-subtitle mb-2 text-muted">Language: @item.Language</h6>
                                      </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- end of result container -->
</body>

@if (!string.IsNullOrEmpty(Error))
{
    <p>@Error</p>
}

@code {
    public string searchTerm { get; set; }
    public List<MoviesItem> Movies { get; set; }
    public List<GenreItem> Genres { get; set; }
    private string genre { get; set; }
    public string Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Genres = await MoviesService.GenreList();
        }
        catch (Exception e)
        {
            Error = e.Message;
        }
    }

    async Task updateSearchTerm()
    {
        try
        {
            Movies = await MoviesService.GetMovies(searchTerm);

        }
        catch (Exception e)
        {
            Error = e.Message;
        }
    }

    public void setGenre(ChangeEventArgs e)
    {
        genre = e.Value.ToString();
    }

    public async Task getFiltered()
    {
        try
        {
            Movies = await MoviesService.GetMoviesbyGenre(genre);

        }
        catch (Exception e)
        {
            Error = e.Message;
        }
    }
}
